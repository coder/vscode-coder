name: Pre-Release
on:
  push:
    tags:
      - "v*-pre"

permissions:
  # Required to publish a release
  contents: write
  pull-requests: read

jobs:
  package:
    name: Package
    runs-on: ubuntu-22.04
    outputs:
      packageName: ${{ steps.setup.outputs.packageName }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v5
        with:
          node-version: "22"

      - name: Install dependencies
        run: |
          yarn
          npm install -g @vscode/vsce

      - name: Extract version from tag
        id: version
        run: |
          # Extract version from tag (remove 'v' prefix and '-pre' suffix)
          TAG_NAME=${GITHUB_REF#refs/tags/v}
          VERSION=${TAG_NAME%-pre}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Pre-release version: $VERSION"

      - name: Setup package path
        id: setup
        run: |
          EXTENSION_NAME=$(node -e "console.log(require('./package.json').name)")
          PACKAGE_NAME="${EXTENSION_NAME}-${{ steps.version.outputs.version }}-pre.vsix"
          echo "packageName=$PACKAGE_NAME" >> $GITHUB_OUTPUT

      - name: Package extension
        run: vsce package --pre-release --out "${{ steps.setup.outputs.packageName }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: extension-${{ steps.version.outputs.version }}
          path: ${{ steps.setup.outputs.packageName }}
          if-no-files-found: error

  publish:
    name: Publish Extension and Create Pre-Release
    needs: package
    uses: ./.github/workflows/publish-extension.yaml
    with:
      version: ${{ needs.package.outputs.version }}
      packageName: ${{ needs.package.outputs.packageName }}
      isPreRelease: true
    secrets:
      VSCE_PAT: ${{ secrets.VSCE_PAT }}
      OVSX_PAT: ${{ secrets.OVSX_PAT }}
