name: Publish Extension

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: "Version to publish"
      packageName:
        required: true
        type: string
        description: "Package filename"
      isPreRelease:
        required: false
        type: boolean
        default: false
        description: "Whether this is a pre-release"
    secrets:
      VSCE_PAT:
        required: true
      OVSX_PAT:
        required: true

jobs:
  publishMS:
    name: Publish to VS Marketplace
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v5
        with:
          node-version: "22"

      - name: Install vsce
        run: npm install -g @vscode/vsce

      - uses: actions/download-artifact@v5
        with:
          name: extension-${{ inputs.version }}

      - name: Publish to VS Marketplace
        run: |
          echo "Publishing version ${{ inputs.version }} to VS Marketplace"
          if [ "${{ inputs.isPreRelease }}" = "true" ]; then
            vsce publish --pre-release --packagePath "./${{ inputs.packageName }}" -p ${{ secrets.VSCE_PAT }}
          else
            vsce publish --packagePath "./${{ inputs.packageName }}" -p ${{ secrets.VSCE_PAT }}
          fi

  publishOVSX:
    name: Publish to Open VSX
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v5
        with:
          node-version: "22"

      - name: Install ovsx
        run: npm install -g ovsx

      - uses: actions/download-artifact@v5
        with:
          name: extension-${{ inputs.version }}

      - name: Publish to Open VSX
        run: |
          echo "Publishing version ${{ inputs.version }} to Open VSX"
          if [ "${{ inputs.isPreRelease }}" = "true" ]; then
            ovsx publish "./${{ inputs.packageName }}" --pre-release -p ${{ secrets.OVSX_PAT }}
          else
            ovsx publish "./${{ inputs.packageName }}" -p ${{ secrets.OVSX_PAT }}
          fi

  publishGH:
    name: Create GitHub ${{ inputs.isPreRelease && 'Pre-' || '' }}Release
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5

      - uses: actions/download-artifact@v5
        with:
          name: extension-${{ inputs.version }}

      - name: Create ${{ inputs.isPreRelease && 'Pre-' || '' }}Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ inputs.isPreRelease }}
          draft: true
          title: "${{ inputs.isPreRelease && 'Pre-' || '' }}Release v${{ inputs.version }}"
          files: ${{ inputs.packageName }}
